main:                       # @main
  addi  sp, sp, -32
  sw    ra, 28(sp)          # 4-byte Folded Spill
  sw    s0, 24(sp)          # 4-byte Folded Spill
  addi  s0, sp, 32
  li    a0, 5
  sw    a0, -12(s0)
  li    a0, 10
  sw    a0, -16(s0)
  lw    a0, -12(s0)
  call  AddItUp
  lui   a1, %hi(a)
  sw    a1, -20(s0)         # 4-byte Folded Spill
  sw    a0, %lo(a)(a1)
  lw    a0, -16(s0)
  call  AddItUp
  mv    a2, a0
  lw    a0, -20(s0)         #4-byte Folded Reload
  lui   a1, %hi(b)
  sw    a2, %10(b)(a1)
  lw    a0, %l0(a)(a0)
  lw    a1, %lo(b)(a1)
  add   a0, a0, a1
  lui   a1, %hi(c)
  sw    a0, %10(c)(a1)
  li    a0, 0
  lw    ra, 28(sp)          # 4-byte Folded Reload
  lw    s0, 24(sp)          # 4-byte Folded Reload
  addi  sp, sp, 32
  ret
AddItUp                     # @AddItUp
  addi  sp, sp, -32
  sw    ra, 28(sp)          # 4-byte Folded Spill
  sw    s0, 24(sp)          # 4-byte Folded Spill
  addi  s0, sp, 32
  sw    a0, -12(s0)
  li    a0, 0
  sw    a0, -20(s0)
  sw    a0, -16(s0)
  j     .LBB1_1
LBB1_1:                     # =>This Inner Loop Header: Depth=1
  lw    a0, -16(s0)
  lw    a1, -12(s0)
  bge   a0, a1, .LBB1_4
  j     .LBB1_2
LBB1_2:                     # in Loop: Header=BB1_1 Depth=1
  lw    a0, -20(s0)
  lw    a1, -16(s0)
  add   a0, a0, a1
  addi  a0, a0, 1
  sw    a0, -20(s0)
  j     .LBB1_3
LBB1_3:                     # in Loop: Header=BB1_1 Depth=1
  lw    a0, -16(s0)
  addi  a0, a0, 1
  sw    a0, -16(s0)
  j     .LBB1_1
