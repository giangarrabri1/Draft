main: # @main
  addi sp, sp, -16
  sw ra, 12(sp) # 4-byte Folded Spill
  sw s0, 8(sp) # 4-byte Folded Spill
  addi s0, sp, 16
  li a0, 0
  sw a0, -12(s0)
  sw a0, -16(s0)
j .LBB0_1
.LBB0_1: # =>This Inner Loop Header: Depth=1
  lw a1, -16(s0)
  li a0, 4
  blt a0, a1, .LBB0_4
j .LBB0_2
.LBB0_2: # in Loop: Header=BB0_1 Depth=1
  lw a1, -16(s0)
  lui a0, %hi(B)
  addi a0, a0, %lo(B)
  slli a1, a1, 2
  add a0, a0, a1
  lw a0, 0(a0)
  addi a0, a0, -1
  lui a2, %hi(A)
  addi a2, a2, %lo(A)
  add a1, a1, a2
  sw a0, 0(a1)
j .LBB0_3
.LBB0_3: # in Loop: Header=BB0_1 Depth=1
  lw a0, -16(s0)
  addi a0, a0, 1
  sw a0, -16(s0)
j .LBB0_1
.LBB0_4:
  lw a0, -16(s0)
  addi a0, a0, -1
  sw a0, -16(s0)
j .LBB0_5
.LBB0_5: # =>This Inner Loop Header: Depth=1
  lw a0, -16(s0)
  li a1, 0
  blt a0, a1, .LBB0_7
j .LBB0_6
.LBB0_6: # in Loop: Header=BB0_5 Depth=1
  lw a1, -16(s0)
  lui a0, %hi(A)
  addi a0, a0, %lo(A)
  slli a2, a1, 2
  add a1, a2, a0
  lw a0, 0(a1)
  lui a3, %hi(B)
  addi a3, a3, %lo(B)
  add a2, a2, a3
  lw a2, 0(a2)
  mul a0, a0, a2
  slli a0, a0, 1
  sw a0, 0(a1)
  lw a0, -16(s0)
  addi a0, a0, -1
  sw a0, -16(s0)
j .LBB0_5
.LBB0_7:
  lw a0, -12(s0)
  lw ra, 12(sp) # 4-byte Folded Reload
  lw s0, 8(sp) # 4-byte Folded Reload
  addi sp, sp, 16
  ret
B:
  .word 1 # 0x1
  .word 2 # 0x2
  .word 4 # 0x4
  .word 8 # 0x8
  .word 16 # 0x10
A:
  .zero 20
